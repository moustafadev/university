#include <stdio.h>
#include <locale.h>
#include <math.h>

#include <iostream>

void MPI(float x0, float eps)
{
	int  n = 1;
	float x, xn,dx, c = 0.5;
	x = x0;

	printf("-----------+-------------+-------------+-----------------+---------------|\n");
	printf("    n    |     X_n     |    X_n+1    |  |X_n+1 - X_n|  |   |f(X_n+1)|  |\n"
		"-----------+-------------+-------------+-----------------+---------------|\n");
	do
	{
		xn = x + c * (2*sin(x)-x+0.4);
		dx = xn-x;
		printf("%10d | %12.7f|%13.8f|%17.8f|%15.8f|\n", n++, x, xn, fabs(dx), fabs(((2*sin(xn)-xn+0.4))));
		x = xn;
	} while (fabs(dx) > eps || fabs(2*sin(x)-x+0.4) > 0.01);
	printf("-----------+-------------+-------------+-----------------+---------------|\n");
	printf("\n");
}
void MN(float x0, float eps) {
	int  n = 1;
	float x, xn, dx;
	x = x0;
	printf("-----------+-------------+-------------+-----------------+---------------|\n");
	printf("    n    |     X_n     |    X_n+1    |  |X_n+1 - X_n|  |   |f(X_n+1)|  |\n"
		"-----------+-------------+-------------+-----------------+---------------|\n");
	if (((2*sin(x)-x+0.4) * (-2*sin(x)) > 0)) {
		do
		{
			if ((2*cos(x)-1) != 0)
			{
				xn = x - ((2*sin(x)-x+0.4) / (2*cos(x)-1));//xn = x + c * (2*sin(x)-x+0.4);
				dx = xn-x;
				printf("%10d | %12.7f|%13.8f|%17.8f|%15.8f|\n", n++, x, xn, fabs(dx), fabs(((2*sin(xn)-xn+0.4))));
				x = xn;
			}
			else {
				printf("Значение производной в данной точке равно нулю\n");
			}
		} while (fabs(dx) > eps || fabs(2*sin(x)-x+0.4) > 0.01);
	}
	else {
		printf("Не выполняется достаточное условие сходимости метода Ньютона\n");
	}
	printf("-----------+-------------+-------------+-----------------+---------------|\n");
	printf("\n");
}



void MMN(float x0, float eps) {
	int  n = 1;
	float x, xn, dx;
	x = x0;
	printf("-----------+-------------+-------------+-----------------+---------------|\n");
	printf("    n    |     X_n     |    X_n+1    |  |X_n+1 - X_n|  |   |f(X_n+1)|  |\n"
		"-----------+-------------+-------------+-----------------+---------------|\n");
	do
		{
			if ((2*cos(x)-1) != 0) {
				xn = x - ((2*sin(x)-x+0.4) / (2*cos(x0)-1));
				dx = xn-x;
				printf("%10d | %12.7f|%13.8f|%17.8f|%15.8f|\n", n++, x, xn, abs(dx), fabs(((2*sin(xn)-xn+0.4))));
				x = xn;
			}
			else {
				printf("Значение производной в данной точке равно нулю\n");
			}
		} while (abs(dx) > eps || (2*sin(x)-x+0.4) > 0.01);
	printf("-----------+-------------+-------------+-----------------+---------------|\n");
	printf("\n");
}



int main() {

	setlocale(LC_CTYPE, "Russian");
	float x0;
	do {
		printf("Введите начальное приближение X0 из отрезка [-2.5; -1.5]: ");
		std::cin >> x0;

		printf("\nНачальное приближение X0: %f Точность: 0.001\n\n", x0);
		printf("\nМетод простых итераций\n\n");
		MPI(x0, 0.001);
		printf("\nМетод Ньютона\n\n");
		MN(x0, 0.001);
		printf("\nМодифицированный метод Ньютона\n\n");
		MMN(x0, 0.001);
		printf("\n\nНачальное приближение X0: %f Точность: 0.00001\n\n", x0);
		printf("\nМетод простых итераций\n\n");
		MPI(x0, 0.00001);
		printf("\nМетод Ньютона\n\n");
		MN(x0, 0.00001);
		printf("\nМодифицированный метод Ньютона\n\n");
		MMN(x0, 0.00001);
		printf("\n\n");
	} while (true);
	return 0;
}

